{"ast":null,"code":"import { useContext, useRef, useInsertionEffect } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { animateValue } from '../animation/animators/MainThreadAnimation.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\n\nfunction useSpring(source) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    isStatic\n  } = useContext(MotionConfigContext);\n  const activeSpringAnimation = useRef(null);\n  const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n  const latestValue = useRef(value.get());\n  const latestSetter = useRef(() => {});\n\n  const startAnimation = () => {\n    /**\n     * If the previous animation hasn't had the chance to even render a frame, render it now.\n     */\n    const animation = activeSpringAnimation.current;\n\n    if (animation && animation.time === 0) {\n      animation.sample(frameData.delta);\n    }\n\n    stopAnimation();\n    activeSpringAnimation.current = animateValue({\n      keyframes: [value.get(), latestValue.current],\n      velocity: value.getVelocity(),\n      type: \"spring\",\n      restDelta: 0.001,\n      restSpeed: 0.01,\n      ...config,\n      onUpdate: latestSetter.current\n    });\n  };\n\n  const stopAnimation = () => {\n    if (activeSpringAnimation.current) {\n      activeSpringAnimation.current.stop();\n    }\n  };\n\n  useInsertionEffect(() => {\n    return value.attach((v, set) => {\n      /**\n       * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n       * at that level, but this will work for now\n       */\n      if (isStatic) return set(v);\n      latestValue.current = v;\n      latestSetter.current = set;\n      frame.update(startAnimation);\n      return value.get();\n    }, stopAnimation);\n  }, [JSON.stringify(config)]);\n  useIsomorphicLayoutEffect(() => {\n    if (isMotionValue(source)) {\n      return source.on(\"change\", v => value.set(parseFloat(v)));\n    }\n  }, [value]);\n  return value;\n}\n\nexport { useSpring };","map":{"version":3,"names":["useContext","useRef","useInsertionEffect","isMotionValue","useMotionValue","MotionConfigContext","useIsomorphicLayoutEffect","animateValue","frame","frameData","useSpring","source","config","isStatic","activeSpringAnimation","value","get","latestValue","latestSetter","startAnimation","animation","current","time","sample","delta","stopAnimation","keyframes","velocity","getVelocity","type","restDelta","restSpeed","onUpdate","stop","attach","v","set","update","JSON","stringify","on","parseFloat"],"sources":["E:/socket stories/frontend/node_modules/framer-motion/dist/es/value/use-spring.mjs"],"sourcesContent":["import { useContext, useRef, useInsertionEffect } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { animateValue } from '../animation/animators/MainThreadAnimation.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    const latestValue = useRef(value.get());\n    const latestSetter = useRef(() => { });\n    const startAnimation = () => {\n        /**\n         * If the previous animation hasn't had the chance to even render a frame, render it now.\n         */\n        const animation = activeSpringAnimation.current;\n        if (animation && animation.time === 0) {\n            animation.sample(frameData.delta);\n        }\n        stopAnimation();\n        activeSpringAnimation.current = animateValue({\n            keyframes: [value.get(), latestValue.current],\n            velocity: value.getVelocity(),\n            type: \"spring\",\n            restDelta: 0.001,\n            restSpeed: 0.01,\n            ...config,\n            onUpdate: latestSetter.current,\n        });\n    };\n    const stopAnimation = () => {\n        if (activeSpringAnimation.current) {\n            activeSpringAnimation.current.stop();\n        }\n    };\n    useInsertionEffect(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            latestValue.current = v;\n            latestSetter.current = set;\n            frame.update(startAnimation);\n            return value.get();\n        }, stopAnimation);\n    }, [JSON.stringify(config)]);\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(source)) {\n            return source.on(\"change\", (v) => value.set(parseFloat(v)));\n        }\n    }, [value]);\n    return value;\n}\n\nexport { useSpring };\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,kBAA7B,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,mBAAT,QAAoC,oCAApC;AACA,SAASC,yBAAT,QAA0C,oCAA1C;AACA,SAASC,YAAT,QAA6B,gDAA7B;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,wBAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,MAAnB,EAAwC;EAAA,IAAbC,MAAa,uEAAJ,EAAI;EACpC,MAAM;IAAEC;EAAF,IAAeb,UAAU,CAACK,mBAAD,CAA/B;EACA,MAAMS,qBAAqB,GAAGb,MAAM,CAAC,IAAD,CAApC;EACA,MAAMc,KAAK,GAAGX,cAAc,CAACD,aAAa,CAACQ,MAAD,CAAb,GAAwBA,MAAM,CAACK,GAAP,EAAxB,GAAuCL,MAAxC,CAA5B;EACA,MAAMM,WAAW,GAAGhB,MAAM,CAACc,KAAK,CAACC,GAAN,EAAD,CAA1B;EACA,MAAME,YAAY,GAAGjB,MAAM,CAAC,MAAM,CAAG,CAAV,CAA3B;;EACA,MAAMkB,cAAc,GAAG,MAAM;IACzB;AACR;AACA;IACQ,MAAMC,SAAS,GAAGN,qBAAqB,CAACO,OAAxC;;IACA,IAAID,SAAS,IAAIA,SAAS,CAACE,IAAV,KAAmB,CAApC,EAAuC;MACnCF,SAAS,CAACG,MAAV,CAAiBd,SAAS,CAACe,KAA3B;IACH;;IACDC,aAAa;IACbX,qBAAqB,CAACO,OAAtB,GAAgCd,YAAY,CAAC;MACzCmB,SAAS,EAAE,CAACX,KAAK,CAACC,GAAN,EAAD,EAAcC,WAAW,CAACI,OAA1B,CAD8B;MAEzCM,QAAQ,EAAEZ,KAAK,CAACa,WAAN,EAF+B;MAGzCC,IAAI,EAAE,QAHmC;MAIzCC,SAAS,EAAE,KAJ8B;MAKzCC,SAAS,EAAE,IAL8B;MAMzC,GAAGnB,MANsC;MAOzCoB,QAAQ,EAAEd,YAAY,CAACG;IAPkB,CAAD,CAA5C;EASH,CAlBD;;EAmBA,MAAMI,aAAa,GAAG,MAAM;IACxB,IAAIX,qBAAqB,CAACO,OAA1B,EAAmC;MAC/BP,qBAAqB,CAACO,OAAtB,CAA8BY,IAA9B;IACH;EACJ,CAJD;;EAKA/B,kBAAkB,CAAC,MAAM;IACrB,OAAOa,KAAK,CAACmB,MAAN,CAAa,CAACC,CAAD,EAAIC,GAAJ,KAAY;MAC5B;AACZ;AACA;AACA;MACY,IAAIvB,QAAJ,EACI,OAAOuB,GAAG,CAACD,CAAD,CAAV;MACJlB,WAAW,CAACI,OAAZ,GAAsBc,CAAtB;MACAjB,YAAY,CAACG,OAAb,GAAuBe,GAAvB;MACA5B,KAAK,CAAC6B,MAAN,CAAalB,cAAb;MACA,OAAOJ,KAAK,CAACC,GAAN,EAAP;IACH,CAXM,EAWJS,aAXI,CAAP;EAYH,CAbiB,EAaf,CAACa,IAAI,CAACC,SAAL,CAAe3B,MAAf,CAAD,CAbe,CAAlB;EAcAN,yBAAyB,CAAC,MAAM;IAC5B,IAAIH,aAAa,CAACQ,MAAD,CAAjB,EAA2B;MACvB,OAAOA,MAAM,CAAC6B,EAAP,CAAU,QAAV,EAAqBL,CAAD,IAAOpB,KAAK,CAACqB,GAAN,CAAUK,UAAU,CAACN,CAAD,CAApB,CAA3B,CAAP;IACH;EACJ,CAJwB,EAItB,CAACpB,KAAD,CAJsB,CAAzB;EAKA,OAAOA,KAAP;AACH;;AAED,SAASL,SAAT"},"metadata":{},"sourceType":"module"}