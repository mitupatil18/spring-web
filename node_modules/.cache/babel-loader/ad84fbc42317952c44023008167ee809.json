{"ast":null,"code":"import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\n\nfunction createMotionComponent(_ref) {\n  let {\n    preloadedFeatures,\n    createVisualElement,\n    useRender,\n    useVisualState,\n    Component\n  } = _ref;\n  preloadedFeatures && loadFeatures(preloadedFeatures);\n\n  function MotionComponent(props, externalRef) {\n    /**\n     * If we need to measure the element we load this functionality in a\n     * separate class component in order to gain access to getSnapshotBeforeUpdate.\n     */\n    let MeasureLayout;\n    const configAndProps = { ...useContext(MotionConfigContext),\n      ...props,\n      layoutId: useLayoutId(props)\n    };\n    const {\n      isStatic\n    } = configAndProps;\n    const context = useCreateMotionContext(props);\n    const visualState = useVisualState(props, isStatic);\n\n    if (!isStatic && isBrowser) {\n      useStrictMode(configAndProps, preloadedFeatures);\n      const layoutProjection = getProjectionFunctionality(configAndProps);\n      MeasureLayout = layoutProjection.MeasureLayout;\n      /**\n       * Create a VisualElement for this component. A VisualElement provides a common\n       * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n       * providing a way of rendering to these APIs outside of the React render loop\n       * for more performant animations and interactions\n       */\n\n      context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n    }\n    /**\n     * The mount order and hierarchy is specific to ensure our element ref\n     * is hydrated by the time features fire their effects.\n     */\n\n\n    return jsxs(MotionContext.Provider, {\n      value: context,\n      children: [MeasureLayout && context.visualElement ? jsx(MeasureLayout, {\n        visualElement: context.visualElement,\n        ...configAndProps\n      }) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)]\n    });\n  }\n\n  const ForwardRefComponent = forwardRef(MotionComponent);\n  ForwardRefComponent[motionComponentSymbol] = Component;\n  return ForwardRefComponent;\n}\n\nfunction useLayoutId(_ref2) {\n  let {\n    layoutId\n  } = _ref2;\n  const layoutGroupId = useContext(LayoutGroupContext).id;\n  return layoutGroupId && layoutId !== undefined ? layoutGroupId + \"-\" + layoutId : layoutId;\n}\n\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n  const isStrict = useContext(LazyContext).strict;\n  /**\n   * If we're in development mode, check to make sure we're not rendering a motion component\n   * as a child of LazyMotion, as this will break the file-size benefits of using it.\n   */\n\n  if (process.env.NODE_ENV !== \"production\" && preloadedFeatures && isStrict) {\n    const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n    configAndProps.ignoreStrict ? warning(false, strictMessage) : invariant(false, strictMessage);\n  }\n}\n\nfunction getProjectionFunctionality(props) {\n  const {\n    drag,\n    layout\n  } = featureDefinitions;\n  if (!drag && !layout) return {};\n  const combined = { ...drag,\n    ...layout\n  };\n  return {\n    MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props)) ? combined.MeasureLayout : undefined,\n    ProjectionNode: combined.ProjectionNode\n  };\n}\n\nexport { createMotionComponent };","map":{"version":3,"names":["jsxs","jsx","forwardRef","useContext","MotionConfigContext","MotionContext","useVisualElement","useMotionRef","useCreateMotionContext","loadFeatures","isBrowser","LayoutGroupContext","LazyContext","motionComponentSymbol","warning","invariant","featureDefinitions","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","MotionComponent","props","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","isStatic","context","visualState","useStrictMode","layoutProjection","getProjectionFunctionality","visualElement","ProjectionNode","Provider","value","children","ForwardRefComponent","layoutGroupId","id","undefined","isStrict","strict","process","env","NODE_ENV","strictMessage","ignoreStrict","drag","layout","combined","isEnabled"],"sources":["E:/socket stories/frontend/node_modules/framer-motion/dist/es/motion/index.mjs"],"sourcesContent":["import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}